[
  {
    "name": "TradeFactoryImpl",
    "type": "impl",
    "interface_name": "tradeo::interfaces::factory::ITradeFactory"
  },
  {
    "name": "core::integer::u256",
    "type": "struct",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::nostra::INostraInterestRateModelDispatcher",
    "type": "struct",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "tradeo::interfaces::factory::GlobalSettings",
    "type": "struct",
    "members": [
      {
        "name": "entry_fee_bps",
        "type": "core::integer::u256"
      },
      {
        "name": "exit_fee_bps",
        "type": "core::integer::u256"
      },
      {
        "name": "fee_receiver",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "ekubo_core",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "nostra_interest_rate_model",
        "type": "strkfarm::interfaces::nostra::INostraInterestRateModelDispatcher"
      },
      {
        "name": "oracle",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "nostra_router",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "core::bool",
    "type": "enum",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "name": "tradeo::interfaces::factory::ITradeFactory",
    "type": "interface",
    "items": [
      {
        "name": "init_new_trade_contract",
        "type": "function",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "collateral",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "borrowed",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "trade_token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "external"
      },
      {
        "name": "init_and_add_position",
        "type": "function",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "collateral",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "borrowed",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "trade_token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "collateral_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "trade_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "min_hf",
            "type": "core::integer::u32"
          },
          {
            "name": "max_slippage_bps",
            "type": "core::integer::u32"
          },
          {
            "name": "path_borrow_to_trade",
            "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
          },
          {
            "name": "path_trade_to_borrow",
            "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "external"
      },
      {
        "name": "set_asset_debt_token",
        "type": "function",
        "inputs": [
          {
            "name": "asset",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "debt_token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "get_asset_debt_token",
        "type": "function",
        "inputs": [
          {
            "name": "asset",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "get_user_trade_contract",
        "type": "function",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "collateral",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "borrow",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "trade_token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "set_global_settings",
        "type": "function",
        "inputs": [
          {
            "name": "settings",
            "type": "tradeo::interfaces::factory::GlobalSettings"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "update_classhash_permissions",
        "type": "function",
        "inputs": [
          {
            "name": "classhash",
            "type": "core::starknet::class_hash::ClassHash"
          },
          {
            "name": "is_active",
            "type": "core::bool"
          },
          {
            "name": "is_current",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "get_global_settings",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "tradeo::interfaces::factory::GlobalSettings"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "is_classhash_active",
        "type": "function",
        "inputs": [
          {
            "name": "classhash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [
          {
            "type": "(core::bool, core::bool)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "get_current_classhash",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "set_pause",
        "type": "function",
        "inputs": [
          {
            "name": "is_paused",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "UpgradeableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::upgrades::interface::IUpgradeable"
  },
  {
    "name": "openzeppelin::upgrades::interface::IUpgradeable",
    "type": "interface",
    "items": [
      {
        "name": "upgrade",
        "type": "function",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "OwnableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
  },
  {
    "name": "openzeppelin::access::ownable::interface::IOwnable",
    "type": "interface",
    "items": [
      {
        "name": "owner",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "transfer_ownership",
        "type": "function",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "renounce_ownership",
        "type": "function",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "PausableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::security::interface::IPausable"
  },
  {
    "name": "openzeppelin::security::interface::IPausable",
    "type": "interface",
    "items": [
      {
        "name": "is_paused",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "name": "constructor",
    "type": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "global_settings",
        "type": "tradeo::interfaces::factory::GlobalSettings"
      },
      {
        "name": "classhash",
        "type": "core::starknet::class_hash::ClassHash"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "OwnershipTransferred",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred"
      },
      {
        "kind": "nested",
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Upgraded",
        "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::security::pausable::PausableComponent::Paused",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::security::pausable::PausableComponent::Unpaused",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::security::pausable::PausableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Paused",
        "type": "openzeppelin::security::pausable::PausableComponent::Paused"
      },
      {
        "kind": "nested",
        "name": "Unpaused",
        "type": "openzeppelin::security::pausable::PausableComponent::Unpaused"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "tradeo::interfaces::factory::GlobalSettings",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "entry_fee_bps",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "exit_fee_bps",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "fee_receiver",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "ekubo_core",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "nostra_interest_rate_model",
        "type": "strkfarm::interfaces::nostra::INostraInterestRateModelDispatcher"
      },
      {
        "kind": "data",
        "name": "oracle",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "nostra_router",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "tradeo::contracts::trade_factory::TradeFactory::ClassHashUpdated",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "classhash",
        "type": "core::starknet::class_hash::ClassHash"
      },
      {
        "kind": "data",
        "name": "is_active",
        "type": "core::bool"
      },
      {
        "kind": "data",
        "name": "is_current",
        "type": "core::bool"
      },
      {
        "kind": "data",
        "name": "timestamp",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "tradeo::contracts::trade_factory::TradeFactory::NewTradeContract",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "collateral",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "borrowed",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "trade_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "contract",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "timestamp",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "tradeo::contracts::trade_factory::TradeFactory::Event",
    "type": "event",
    "variants": [
      {
        "kind": "flat",
        "name": "OwnableEvent",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event"
      },
      {
        "kind": "flat",
        "name": "UpgradeableEvent",
        "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event"
      },
      {
        "kind": "flat",
        "name": "PausableEvent",
        "type": "openzeppelin::security::pausable::PausableComponent::Event"
      },
      {
        "kind": "nested",
        "name": "GlobalSettings",
        "type": "tradeo::interfaces::factory::GlobalSettings"
      },
      {
        "kind": "nested",
        "name": "ClassHashUpdated",
        "type": "tradeo::contracts::trade_factory::TradeFactory::ClassHashUpdated"
      },
      {
        "kind": "nested",
        "name": "NewTradeContract",
        "type": "tradeo::contracts::trade_factory::TradeFactory::NewTradeContract"
      }
    ]
  }
]
